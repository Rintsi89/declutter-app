<<<<<<< HEAD
name: CI / CD

on: [push]

env:
    TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
    SECRET: ${{ secrets.SECRET }}
    EMAILSECRET: ${{ secrets.EMAILSECRET }}
    BUCKET_KEYID: ${{ secrets.BUCKET_KEYID }}
    BUCKET_ACCESSKEY: ${{ secrets.BUCKET_ACCESSKEY }}
    BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
    EMAIL: ${{ secrets.EMAIL }}
    EMAILPASSWORD: ${{ secrets.EMAILPASSWORD }}
    TEST_PORT: ${{ secrets.TEST_PORT }}
    EMAILCLIENTID: ${{ secrets.EMAILCLIENTID }}
    EMAILCLIENTSECRET: ${{ secrets.EMAILCLIENTSECRET }}
    EMAILURL: ${{ secrets.EMAILURL }}
    EMAILREFRESHTOKEN: ${{ secrets.EMAILREFRESHTOKEN }}

jobs:
  test_backend:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: | 
        npm install
    - name: Run backend tests

      run: | 
        npm run test:backend
        
  test_e2e:
    needs: test_backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install backend dependencies
      run: | 
        npm install
    - name: Start backend test server
      run: | 
        npm run start:test &
    - name: Install frontend dependecies
      working-directory: ./client
      run: npm install
    - name: Create build
      working-directory: ./client
      run: npm run build
    - name: Start localhost
      working-directory: ./client
      run: npm run start &
    - name: Start Cypress tests
      working-directory: ./client
      run: | 
        npx cypress run
=======
name: Greet Everyone
# This workflow is triggered on pushes to the repository.
on: [push]

jobs:
  build:
    # Job name is Greeting
    name: Greeting
    # This job runs on Linux
    runs-on: ubuntu-latest
    steps:
      # This step uses GitHub's hello-world-javascript-action: https://github.com/actions/hello-world-javascript-action
      - name: Hello world
        uses: actions/hello-world-javascript-action@v1
        with:
          who-to-greet: 'Mona the Octocat'
        id: hello
      # This step prints an output (time) from the previous step's action.
      - name: Echo the greeting's time
        run: echo 'The time was ${{ steps.hello.outputs.time }}.'
>>>>>>> f38926b84e2f0def3dfc0c82cf75c6f6ffe4d605
